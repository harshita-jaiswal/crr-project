/// <reference types="node" />
/// <reference types="node" />
import { ReadStream } from "fs";
import { Buffer } from "node:buffer";
interface InputProps {
    inputType: string;
}
export declare const INPUT_TYPE_STREAM = "stream";
export declare const INPUT_TYPE_BASE64 = "base64";
export declare const INPUT_TYPE_BYTES = "bytes";
export declare const INPUT_TYPE_PATH = "path";
export declare class Input {
    MAX_DOC_PAGES: number;
    inputType: string;
    filename: string;
    filepath?: string;
    mimeType: string;
    fileObject: Buffer;
    /**
     * @param {String} inputType - the type of input used in file ("base64", "path", "dummy").
     *                             NB: dummy is only used for tests purposes
     * @param {Boolean} cutPages
     * NB: Because of async calls, init() should be called after creating the object
     */
    constructor({ inputType }: InputProps);
    init(): Promise<void>;
    isPdf(): boolean;
    checkMimetype(): Promise<string>;
    countPages(): Promise<number>;
    /** Merge PDF pages */
    cutPdf(): Promise<void>;
}
interface PathInputProps {
    inputPath: string;
}
export declare class PathInput extends Input {
    readonly inputPath: string;
    constructor({ inputPath }: PathInputProps);
    init(): Promise<void>;
}
interface Base64InputProps {
    inputString: string;
    filename: string;
}
export declare class Base64Input extends Input {
    private inputString;
    constructor({ inputString, filename }: Base64InputProps);
    init(): Promise<void>;
}
interface StreamInputProps {
    inputStream: ReadStream;
    filename: string;
}
export declare class StreamInput extends Input {
    private inputStream;
    constructor({ inputStream, filename }: StreamInputProps);
    init(): Promise<void>;
    stream2buffer(stream: ReadStream): Promise<Buffer>;
}
interface BytesInputProps {
    inputBytes: string;
    filename: string;
}
export declare class BytesInput extends Input {
    private inputBytes;
    constructor({ inputBytes, filename }: BytesInputProps);
    init(): Promise<void>;
}
export {};
